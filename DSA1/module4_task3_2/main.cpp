// Дано N кубиков. Требуется определить каким количеством способов можно выстроить из этих кубиков пирамиду.
// 3_2. Широкая пирамида. Каждый вышележащий слой пирамиды должен быть строго меньше нижележащего.
// N ≤ 300.


#include <iostream>
#include <vector>
using namespace std;

int main()
{
    int n;
    cin >> n;

    // массив для реализации двумерной динамики
    // v[i][j] - кол-во пирамид, которые можно составить из i кубиков, в основании которых <= j кубиков
    long long v[n+1][n+1];

    // будем считать, что из 0 кубиков всегда можно составить одну пирамиду
    for( int j = 0; j <= n; j++ ) {
        v[0][j] = 1;
    }

    // из > 0 кубиков невозможно составить пирамиду, в основании которой 0 кубиков
    for( int i = 1; i <= n; i++ ) {
        v[i][0] = 0;
    }

    // количество пирамид из i кубиков, в основании которых <= j кубиков равно сумме
    // количества пирамид из i кубиков, в основании которых <= j-1 кубиков и
    // количества пирамид из i-j кубиков, в основании которых <= j-1 кубиков
    for( int i = 1; i <= n; i++ )
        for( int j = 1; j <= n; j++ ) {
            v[i][j] = v[i][j-1];
            if( i >= j ) {
                v[i][j] += v[i-j][j-1];
            }
        }

    cout << v[n][n];
}
